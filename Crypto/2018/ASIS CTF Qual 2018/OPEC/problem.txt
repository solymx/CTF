Encrypted FLAG = 2238021272943455422988435069928202218850114950364792378528125099483340800936837488168175160433591784723184391534262653136517814499534982379840448326549737496794011055148394889521508358875897097667486829744046944016197638274255601575542814086002539313783943871419886991879470923138961169675374359337809192744293795876172506621683219645039833268241726299193265970375272701440104566293767984611973234535017635770883116734485581736597750182162623580068116421735456788653833182160012021948478789464678702869801816327197942905902689456411794892978311095050425630089734125545251406098247542089885581163183538711900817465980538605806276599150991410514553685813469460885255158691223828417496468074345847492929710349271967014547395782340239681287349713615432972791037347601723117069929258713475644496462586670587628779255674222965696383176558047988091886190292121294408827465995570789755609279945743516693217998448556244950375794766694611830766800983261510577844406741231987144204589449738951545006679778699016850617460932257008368791321007990088420338459864770295781735843264302679896782395020855878057431769861135317128036732494738423387270645350843485326004668433924593718268947310307676435111716313221312901853616388083580632856889285319428746578633386970562551493493701802262278205737667691912487546175794259808356044759742200594020619861209632739031078812668599349212409253395329282234837377673155805533379978379956310581329612673649207331399712473426704878495648028734820299308992802848880377013155834667466212090728835929640059448641720053815948672129017078953769777923579933204111684340833011454468547922514648874558803494571681624765426041040417348220259045757688577432945971833686138795497870789587362704694300835912675267705983273201011774298328030374081822486209599680355262149950079758754279954387828700502217550578804338073995259098096316416677

def produire_key(k):
    p = getPrime(k)
    n = p ** 3
    while True:
        g = getRandomRange(1, n-1)
        g_p = pow(g, p-1, p**2)
        if pow(g_p, p, p**2) == 1:
            break
    h0 = getRandomRange(1, n-1)
    h = pow(h0, n, n)
    pubkey = (n, g, h)
    return pubkey

Public key = (19920958276649358836009578667453367994654781122680546827431462000374316514273721199979331131354610038283972701150823012434659241580760882841742900215718836425023342643686034966689927432785103421261385889920624393634410848359543533988672642619105107546268895911320742534029661933452529009095671942612769851806717386150120413935597833464260649666361552541624348338780563921627682936656236101903863653429585135059362445824235628012731657196328345055739046964163329243508994941211949836538379440697408632326888982979950694484700829967542091836761506214308866141393023586836642092962373439511365031800531792203313887316757595873928034575794666989054801784835720188973443731419845093246038288032176325747219371680719981966812194901033469591286224514326156809099160071452319643749087072397419543882679251468065150671352189329232565762196168668955099127182764366366984700040014698983060613856419892423194081534408410130854408129283368756191968942658984036688521811688451338033457382379655072042649024969584642110051304963346399822025384216217917420730078468383124507217221745601880849322631256732975490464507539684180523036030655148272444357701965876516441401463830701599463051044748886757470722229034137541003146418580683096780376652791010307659785458465246928307428719574384219981461626658648542598143070826188132189789660006106495813600062403631965186764935992234689528622381194009385756858328289273393977041975119391901822332324436411495609844672743034146295699606603656123349130821762407180468175048764810172946568704627213261933654013475987000185889972485239735821070728250197472849313290632131230362014259267195981020122085532640776901907726668529010403237503848220786161160981967858748974235076217677007085772445985368724361323392951489797731340653354732633885081191736009118929218045684812659574827668896817687797427737393969757526385709469383951817L, 4158907067168764314109087403186307498853919837497049653107510520351450572954274012419284377600436953156188900158796336257793352849845642874043908824128550767131168602661560913395223552166924305221474213285394838327766262436735289012055981817045108881807746779651345184915735859203097245249714789804195264934720642114730334509461921765156279690669185969775079336058318375875067433940894245422467523193191654466696010424083642089685061986257059888530452637389072005955269765854609688901395803055427266792264974812341304173353844411471127903771631848713671254879159418233999715544919077029586891618207044843927508673401698435842599197866938434989230206161495153136984819926399288856900010138865581202121752978030840538047337275518817797515746697188676284813133272957525816284112643253151890841569842914353556786405600742376851638768374681661959737110205335245417404299896773078196332161745629270731168189681464527153314713440122133763567846326067035921114876871639444047382960211551445378874443631282900506580986244899030879924976062866985561063269657967274586422558532446177801269028997559817093010737526215597700630201237718634782388280096744811398104083608256122361687013382665938796533852341746558752438634611927376083167842060241737301327261555305429677495741631173166138707266976525540505641997112925561429461173602437118033969400457919071237942710431200700373713463439552282650048344393790878860147619169872952127110423354279808897711364126740809562279509529656329272785816784520927355000682197436661597860336435039975208709150926151323476673345472619541365787303493811460909076240093414882828445513678855268410958249303020981127688958855275021512510177072920367584383788989731029258857988408824709067847735975545787282081514616214641962905728444617665120361341635922756453492497400883826616357971442853060097425742954482995666921917968634457357L, 2443135703506613383270472115649373055130549370814373779966391880174645878002993875292574403266527166518703697020713901878369101478785991845167865805765832639647325925422908730973943012663507841540289433371060730532731393986113611340562057167528145690170881265684404607115715302159406405497683913979365770497404617261787182222765969611664599403120019360244337848454012513235531668609461016141322002162928379584457610063422355685185206980562741197163197696895013401446043071338399398650282698914398633050258745506790259866521355264721551309793922048918923619123190456831789669409834273343493096680489692126014771092333719653521927301114969412028915343190547721502725800910690949469915495146354736947263222296102889138918857442577695248802365026477823908265135103403637037092626363737800304996497298781762107536058228814592462161061209795770848628586148296991493580413669649639017443629700898938587164816997733388033826372709948230780568557406783958405440273607382786758454019259080153642432296227326209519552461609921932433257537997875152455141305128227873960150986169622014321897773170805109720976259746117965104374450924764059831532672792228033565482550025845905185754602178417195783218095500210976193765384297661466994180083761267278673896619616445447374339271540514597332894994435460100913808731358729134215749651306248347486816535944714223000276824222400989627977123820835703222396878025904834552275384953903095087459885566493999302033486251069963922091713939424473274134650228137309989126080164592268645227053261756294984619740987160069558310154261640548028214384297781375299259440160012758648369071917814927149977221197243902110367267893533410699322894500219936846669922002173679875405765889900858002000564439089874060795887738914952648617574411435180463281341692610836271408492285280142687413776605606181826407193122835747990608593639289274611L)

def crypter(m, pubkey):
    n, g, h = pubkey
    Mlen = len(bin(bytes_to_long(m))[2:])
    k = len(bin(n)[2:])/3
    rlen = getRandomRange(1, k - Mlen)
    R = long_to_bytes(getRandomInteger(rlen))
    r = bytes_to_long(sha256(m + R).digest())
    c = (pow(g, bytes_to_long(m + R), n) * pow(h, r, n)) % n
    return c
